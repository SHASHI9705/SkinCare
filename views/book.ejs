<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MedBook - Find & Book Doctors</title>
    <link rel="stylesheet" href="style.css">
    <script defer src="ja.js"></script>
</head>
<style>
    /* üé® Color Variables */
:root {
    --primary: #2A5C82;
    --secondary: #68b4f7;
    --accent: #FF6B6B;
    --light: #F8F9FA;
    --dark: #2C3E50;
    --shadow-light: rgba(0, 0, 0, 0.1);
    --shadow-dark: rgba(0, 0, 0, 0.3);
}

/* üåç Reset & Global Styles */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', sans-serif;
}

body {
    background-color: var(--light);
    color: var(--dark);
    line-height: 1.6;
    padding-bottom: 2rem;
    background-image: url('docto.jpg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* üåü Header */
.header {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    color: white;
    text-align: center;
    padding: 1.5rem;
    box-shadow: 0 4px 10px var(--shadow-dark);
    animation: fadeIn 1s ease-in-out;
}

/* üîé Search Section */
.search-section {
    background: white;
    padding: 2rem;
    text-align: center;
    box-shadow: 0 4px 10px var(--shadow-light);
    border-radius: 10px;
    margin: 2rem auto;
    max-width: 800px;
    animation: slideIn 0.8s ease-in-out;
}

.search-controls {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
}

input, select {
    padding: 0.8rem;
    border: 2px solid var(--primary);
    border-radius: 5px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

input:focus, select:focus {
    outline: none;
    border-color: var(--secondary);
    box-shadow: 0 0 10px var(--secondary);
}

button {
    background: var(--secondary);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 3px 8px var(--shadow-light);
}

button:hover {
    transform: translateY(-3px);
    background: #4a90e2;
    box-shadow: 0 5px 15px var(--shadow-dark);
}

/* üè• Doctor Results */
.results-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
}

/* üë®‚Äç‚öïÔ∏è Doctor Card */
.doctor-card {
    background: white;
    border-radius: 10px;
    padding: 1.5rem;
    box-shadow: 0 3px 10px var(--shadow-light);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-align: center;
    animation: fadeIn 0.7s ease-in-out;
}

.doctor-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 5px 15px var(--shadow-dark);
}

.doctor-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 5px;
    margin-bottom: 1rem;
}

/* ‚≠ê Ratings */
.rating {
    color: #FFD700;
    font-size: 1.2rem;
    margin: 0.5rem 0;
}

/* üìÖ Booking Modal */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    justify-content: center;
    align-items: center;
    animation: fadeIn 0.5s ease-in-out;
}

.modal-content {
    background: white;
    padding: 2rem;
    border-radius: 10px;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 5px 20px var(--shadow-dark);
    text-align: center;
    animation: slideUp 0.6s ease-in-out;
}

.modal-content input {
    width: 100%;
    margin-top: 10px;
    padding: 10px;
    border: 2px solid var(--primary);
    border-radius: 5px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.modal-content input:focus {
    border-color: var(--secondary);
    box-shadow: 0 0 10px var(--secondary);
}

.modal-content button {
    width: 100%;
    margin-top: 15px;
    background: var(--accent);
    color: white;
    padding: 10px;
    border-radius: 5px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.modal-content button:hover {
    background: #ff4b4b;
    box-shadow: 0 5px 15px var(--shadow-dark);
}

/* üîÑ Loading Animation */
.loader {
    border: 5px solid var(--light);
    border-top: 5px solid var(--secondary);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
    margin: 2rem auto;
}

/* üé¨ Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideIn {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

</style>
<body>
    <header class="header">
        <h1>Lovely-Skins</h1>
        <p>Find and book appointments with nearby doctors</p>
    </header>

    <section class="search-section">
        <div class="search-controls">
            <input type="text" id="location" placeholder="Enter your location or use current location">
            <select id="specialty">
                <option value="dermatologist">Dermatologist</option>
                <option value="general practitioner">General Practitioner</option>
                <option value="pediatrician">Pediatrician</option>
            </select>
            <button onclick="findDoctors()"><i class="fas fa-search"></i> Search</button>
        </div>
    </section>

    <div class="loader" id="loading" style="display: none;"></div>
    <div class="results-grid" id="results"></div>

    <div class="modal" id="bookingModal">
        <div class="modal-content">
            <h2>Book Appointment</h2>
            <form id="bookingForm">
                <input type="date" id="appointmentDate" required>
                <input type="time" id="appointmentTime" required>
                <input type="text" id="patientName" placeholder="Your Name" required>
                <input type="email" id="patientEmail" placeholder="Your Email" required>
                <button type="submit">Confirm Booking</button>
            </form>
        </div>
    </div>
</body>
</html>
<script>
    const API_KEY = 'AIzaSyBEM7Ri4qcnRYg-xyExxRf7eyOipMpEcTU'; // Replace with your actual Google API key
let currentLocation = null;

// Backup Appointment Website (e.g., Practo)
const backupAppointmentURL = "https://www.practo.com/";  // Change to any backup URL you prefer

async function findDoctors() {
    const specialty = document.getElementById('specialty').value;
    const locationInput = document.getElementById('location').value;

    // Show loading spinner
    document.getElementById('loading').style.display = 'block';
    document.getElementById('results').innerHTML = '';

    try {
        // Get user's current location if no input is given
        if (navigator.geolocation && !locationInput) {
            const position = await new Promise((resolve, reject) => {
                navigator.geolocation.getCurrentPosition(resolve, reject);
            });
            currentLocation = `${position.coords.latitude},${position.coords.longitude}`;
        } else {
            currentLocation = locationInput;
        }

        const apiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${specialty}+near+${currentLocation}&key=${API_KEY}`;

        console.log("üîπ API Request URL:", apiUrl);

       
        const response = await fetch(apiUrl);
        const data = await response.json();

        console.log("üîπ API Response:", data);

       
        if (data.status !== "OK") {
            throw new Error(`API Error: ${data.status} - ${data.error_message}`);
        }

        
        displayResults(data.results);
    } catch (error) {
        console.error("üõë Error:", error);
        alert(`Error finding doctors. Redirecting to another website for booking.`);

        
        window.location.href = backupAppointmentURL;
    } finally {
        document.getElementById('loading').style.display = 'none';
    }
}


function displayResults(doctors) {
    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = doctors.map(doctor => `
        <div class="doctor-card">
            ${doctor.photos ? `<img src="https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${doctor.photos[0].photo_reference}&key=${API_KEY}" class="doctor-image">` : ''}
            <h3>${doctor.name}</h3>
            <div class="rating">${doctor.rating ? '‚≠ê'.repeat(Math.round(doctor.rating)) : 'No ratings available'}</div>
            <p>${doctor.formatted_address}</p>
            ${doctor.opening_hours ? `<p>${doctor.opening_hours.open_now ? 'üü¢ Open Now' : 'üî¥ Closed'}</p>` : ''}
            <button onclick="showBookingModal('${doctor.name}')">Book Appointment</button>
        </div>
    `).join('');
}


function showBookingModal(doctorName) {
    document.getElementById('bookingModal').style.display = 'flex';
    document.querySelector('.modal h2').textContent = `Book Appointment with ${doctorName}`;
}


document.getElementById('bookingForm').addEventListener('submit', function(e) {
    e.preventDefault();
    alert('‚úÖ Booking confirmed!');
    document.getElementById('bookingModal').style.display = 'none';
});


window.onclick = function(event) {
    const modal = document.getElementById('bookingModal');
    if (event.target === modal) {
        modal.style.display = 'none';
    }
};

</script>
